//
// Created by Acer on 07/06/2025.
//

#ifndef TEXTINSPECTOR_H
#define TEXTINSPECTOR_H
#include <iostream>

namespace Text {

    const std::string BodoHeader = R"(
  ____            _
 | __ )  ___   __| | ___
 |  _ \ / _ \ / _` |/ _ \
 | |_) | (_) | (_| | (_) |
 |____/ \___/ \__,_|\___/
  _____ _____ _____ _____ _____ _____ _____ _____
 |_____|_____|_____|_____|_____|_____|_____|_____|
  ____              _    _               ____        _    _
 | __ )  ___   ___ | | _(_)_ __   __ _  |  _ \  ___ | | _| |_ ___ _ __
 |  _ \ / _ \ / _ \| |/ / | '_ \ / _` | | | | |/ _ \| |/ / __/ _ \ '__|
 | |_) | (_) | (_) |   <| | | | | (_| | | |_| | (_) |   <| ||  __/ |
 |____/ \___/ \___/|_|\_\_|_| |_|\__, | |____/ \___/|_|\_\\__\___|_|
                                 |___/
)";

    const std::string ChooseInterface = R"(
   ___ _                       ___     _            __
  / __| |_  ___  ___ ___ ___  |_ _|_ _| |_ ___ _ _ / _|__ _ __ ___
 | (__| ' \/ _ \/ _ (_-</ -_)  | || ' \  _/ -_) '_|  _/ _` / _/ -_)
  \___|_||_\___/\___/__/\___| |___|_||_\__\___|_| |_| \__,_\__\___|
)";

    const std::string UnderlineChooseInterface = R"(  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
)";

    const std::string ThankYouExitText = R"(
  _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____
 |_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|
  _                _____ _   _    _    _   _ _  __ __   _____  _   _                _
 | |              |_   _| | | |  / \  | \ | | |/ / \ \ / / _ \| | | |              | |
 | |                | | | |_| | / _ \ |  \| | ' /   \ V / | | | | | |              | |
 | |                | | |  _  |/ ___ \| |\  | . \    | || |_| | |_| |              | |
 | |                |_| |_| |_/_/   \_\_| \_|_|\_\   |_| \___/ \___/               | |
 |_|                                                                               |_|
  _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____ _____
 |_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|_____|
)";

     const std::string ItemSaved = R"(  ___ ___ ___ ___ ___ ___ ___ ___ ___ ____ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|____|___|___|___|___|___|___|___|___|___|___|___|
      ___       _          ___                   _   _      ___                  _
     |   \ __ _| |_ __ _  | _ \___ __ ___ _ _ __| | (_)___ / __| __ ___ _____ __| |
     | |) / _` |  _/ _` | |   / -_) _/ _ \ '_/ _` | | (_-< \__ \/ _` \ V / -_) _` |
     |___/\__,_|\__\__,_| |_|_\___\__\___/_| \__,_| |_/__/ |___/\__,_|\_/\___\__,_|
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ____ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|____|___|___|___|___|___|___|___|___|___|___|___|

)";

    const std::string ExitConfirmation = R"(
===========================      Press "Enter" to Exit      ===========================

)";
    const std::string UpDownArrowEnterText = "Use Down or Up Arrow to navigate, \"Enter\" to select";
    const std::string CommandLineMainMenuHeader = R"(
                __  __      _        __  __
               |  \/  |__ _(_)_ _   |  \/  |___ _ _ _  _
               | |\/| / _` | | ' \  | |\/| / -_) ' \ || |
               |_|  |_\__,_|_|_||_| |_|  |_\___|_||_\_,_|
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
)";

    const std::string CommandLineMainMenuDash = R"(  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
)";

    const std::string ManageDoctorData = R"(
        __  __                           ___          _
       |  \/  |__ _ _ _  __ _ __ _ ___  |   \ ___  __| |_ ___ _ _
       | |\/| / _` | ' \/ _` / _` / -_) | |) / _ \/ _|  _/ _ \ '_|
       |_|  |_\__,_|_||_\__,_\__, \___| |___/\___/\__|\__\___/_|
                             |___/
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
)";

    const std::string ManagePatientData = R"(
      __  __                           ___      _   _         _
     |  \/  |__ _ _ _  __ _ __ _ ___  | _ \__ _| |_(_)___ _ _| |_
     | |\/| / _` | ' \/ _` / _` / -_) |  _/ _` |  _| / -_) ' \  _|
     |_|  |_\__,_|_||_\__,_\__, \___| |_| \__,_|\__|_\___|_||_\__|
                           |___/
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
)";

    const std::string BookAppointment = R"(
  ___           _       _                  _     _                 _
 | _ ) ___  ___| |__   /_\  _ __ _ __  ___(_)_ _| |_ _ __  ___ _ _| |_
 | _ \/ _ \/ _ \ / /  / _ \| '_ \ '_ \/ _ \ | ' \  _| '  \/ -_) ' \  _|
 |___/\___/\___/_\_\ /_/ \_\ .__/ .__/\___/_|_||_\__|_|_|_\___|_||_\__|
                           |_|  |_|
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
)";

   const std::string InsertPatient = R"(
  ___                  _     ___      _   _         _
 |_ _|_ _  ___ ___ _ _| |_  | _ \__ _| |_(_)___ _ _| |_
  | || ' \(_-</ -_) '_|  _| |  _/ _` |  _| / -_) ' \  _|
 |___|_||_/__/\___|_|  \__| |_| \__,_|\__|_\___|_||_\__|
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|

)";

   const std::string PatientSuccessfullyAdded = R"(
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|
  _   ___      _   _         _                                          _
 | | | _ \__ _| |_(_)___ _ _| |_                                       | |
 | | |  _/ _` |  _| / -_) ' \  _|                                      | |
 | | |_| \__,_|\__|_\___|_||_\__|                                      | |
 |_|                                                                   |_|
  _   ___                       __      _ _                             _
 | | / __|_  _ __ __ ___ ______/ _|_  _| | |_  _                       | |
 | | \__ \ || / _/ _/ -_|_-<_-<  _| || | | | || |                      | |
 | | |___/\_,_\__\__\___/__/__/_|  \_,_|_|_|\_, |                      | |
 |_|                                        |__/                       |_|
  _     _      _    _        _                                          _
 | |   /_\  __| |__| |___ __| |                                        | |
 | |  / _ \/ _` / _` / -_) _` |                                        | |
 | | /_/ \_\__,_\__,_\___\__,_|                                        | |
 |_|                                                                   |_|
  ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___ ___
 |___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|___|

)";

    const std::string PatientAddedSuccessfullyConfirmation = R"(
=============     Press "Enter" to return to Main Menu     ==============)";

    inline void PrintCharWithLength(char c, int length) { while (length--) { std::cout << c; } std::cout << '\n'; }

    const std::string NamaKelompok = R"(
=================================================================
| TUGAS AKHIR ALGORITMA DAN DATA STRUKTUR                       |
| Nama Kelompok :                                               |
|    1. Muhammad Idham Ma'arif          (245150300111024)       |
|    2. Muhammad Varrel diandra         (245150307111029)       |
|    3. Muhammad Rafi Alfarel K         (245150307111018)       |
|    4. Rafi Ibnushaleh                 (245150301111012)       |
|    5. Afif Rafi Ardiyanto             (245150307111026)       |
|                                                               |
=================================================================
)";


} // Text

#endif //TEXTINSPECTOR_H
